{
  "openapi": "3.0.1",
  "info": {
    "title": "LostAndFoundItems",
    "version": "1.0"
  },
  "paths": {
    "/api/Category": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Gets all existing categories.",
        "responses": {
          "200": {
            "description": "Returns the list of categories.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDTO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No categories found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Category"
        ],
        "summary": "Creates a new category.",
        "requestBody": {
          "description": "The category data to create (only name is required).",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryWriteDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryWriteDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryWriteDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category successfully created.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or business logic error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/Category/{id}": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Gets a specific category by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The category ID.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDTO"
                }
              }
            }
          },
          "404": {
            "description": "Category not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Category"
        ],
        "summary": "Updates an existing category.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the category to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The new category data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryWriteDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryWriteDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryWriteDTO"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Category updated successfully."
          },
          "400": {
            "description": "Invalid input or operation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Category not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Category"
        ],
        "summary": "Deletes an existing category by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the category to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Category deleted successfully."
          },
          "400": {
            "description": "Operation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Category not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected server error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/ClaimRequest": {
      "get": {
        "tags": [
          "ClaimRequest"
        ],
        "summary": "Gets all existing claim requests.",
        "responses": {
          "200": {
            "description": "Returns the list of claim requests.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClaimRequestDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClaimRequestDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClaimRequestDTO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No claim requests found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ClaimRequest"
        ],
        "summary": "Creates a new claim request.",
        "requestBody": {
          "description": "The claim request data to create (only name is required).",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimRequestWriteDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimRequestWriteDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimRequestWriteDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Claim request successfully created.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimRequestDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimRequestDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimRequestDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or business logic error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/ClaimRequest/{id}": {
      "get": {
        "tags": [
          "ClaimRequest"
        ],
        "summary": "Gets a specific claim request by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The claim request ID.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Claim request found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimRequestDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimRequestDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimRequestDTO"
                }
              }
            }
          },
          "404": {
            "description": "Claim request not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ClaimRequest"
        ],
        "summary": "Updates an existing claim request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the claim request to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The new claim request data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimRequestWriteDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimRequestWriteDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimRequestWriteDTO"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Claim request updated successfully."
          },
          "400": {
            "description": "Invalid input or operation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Claim request not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ClaimRequest"
        ],
        "summary": "Deletes an existing claim request by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the claim request to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Claim request deleted successfully."
          },
          "400": {
            "description": "Operation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Claim request not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/ClaimStatus": {
      "get": {
        "tags": [
          "ClaimStatus"
        ],
        "summary": "Gets all existing claim status.",
        "responses": {
          "200": {
            "description": "Returns the list of claim status.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClaimStatusDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClaimStatusDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClaimStatusDTO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No claim status found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ClaimStatus"
        ],
        "summary": "Creates a new claim status.",
        "requestBody": {
          "description": "The claim status data to create (only name is required).",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimStatusWriteDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimStatusWriteDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimStatusWriteDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Claim status successfully created.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimStatusDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimStatusDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimStatusDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or business logic error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/ClaimStatus/{id}": {
      "get": {
        "tags": [
          "ClaimStatus"
        ],
        "summary": "Gets a specific claim status by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The claim status ID.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Claim status found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimStatusDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimStatusDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimStatusDTO"
                }
              }
            }
          },
          "404": {
            "description": "Claim status not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ClaimStatus"
        ],
        "summary": "Updates an existing claim status.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the claim status to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The new claim status data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimStatusWriteDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimStatusWriteDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimStatusWriteDTO"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Claim status updated successfully."
          },
          "400": {
            "description": "Invalid input or operation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "ClaimStatus not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ClaimStatus"
        ],
        "summary": "Deletes an existing claim status by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the claim status to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Claim status deleted successfully."
          },
          "400": {
            "description": "Operation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "ClaimStatus not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/FoundItem": {
      "get": {
        "tags": [
          "FoundItem"
        ],
        "summary": "Gets all existing found items.",
        "responses": {
          "200": {
            "description": "Returns the list of found items.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FoundItemDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FoundItemDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FoundItemDTO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No found items found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "FoundItem"
        ],
        "summary": "Creates a new found item.",
        "requestBody": {
          "description": "The found item data to create (only name is required).",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FoundItemWriteDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FoundItemWriteDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FoundItemWriteDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Found item successfully created.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FoundItemDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FoundItemDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FoundItemDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or business logic error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/FoundItem/{id}": {
      "get": {
        "tags": [
          "FoundItem"
        ],
        "summary": "Gets a specific found item by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The found item ID.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found item found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FoundItemDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FoundItemDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FoundItemDTO"
                }
              }
            }
          },
          "404": {
            "description": "Found item not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "FoundItem"
        ],
        "summary": "Updates an existing found item.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the found item to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The new found item data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FoundItemWriteDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FoundItemWriteDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FoundItemWriteDTO"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Found item updated successfully."
          },
          "400": {
            "description": "Invalid input or operation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "FoundItem not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FoundItem"
        ],
        "summary": "Deletes an existing found item by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the found item to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Found item deleted successfully."
          },
          "400": {
            "description": "Operation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "FoundItem not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/Location": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Gets all existing locations.",
        "responses": {
          "200": {
            "description": "Returns the list of locations.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationDTO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No locations found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Creates a new location.",
        "requestBody": {
          "description": "The location data to create (only name is required).",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationWriteDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationWriteDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LocationWriteDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Location successfully created.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LocationDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or business logic error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/Location/{id}": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Gets a specific location by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The location ID.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Location found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LocationDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationDTO"
                }
              }
            }
          },
          "404": {
            "description": "Location not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Location"
        ],
        "summary": "Updates an existing location.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the location to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The new location data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationWriteDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationWriteDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LocationWriteDTO"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Location updated successfully."
          },
          "400": {
            "description": "Invalid input or operation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Location not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Location"
        ],
        "summary": "Deletes an existing location by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the location to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Location deleted successfully."
          },
          "400": {
            "description": "Operation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Location not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/LostItem": {
      "get": {
        "tags": [
          "LostItem"
        ],
        "summary": "Gets all existing lost items.",
        "responses": {
          "200": {
            "description": "Returns the list of lost items.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LostItemDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LostItemDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LostItemDTO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No lost items found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "LostItem"
        ],
        "summary": "Creates a new lost item.",
        "requestBody": {
          "description": "The lost item data to create (only name is required).",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LostItemWriteDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LostItemWriteDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LostItemWriteDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "lost item successfully created.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LostItemDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LostItemDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LostItemDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or business logic error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/LostItem/{id}": {
      "get": {
        "tags": [
          "LostItem"
        ],
        "summary": "Gets a specific lost item by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The lost item ID.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "lost item found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LostItemDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LostItemDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LostItemDTO"
                }
              }
            }
          },
          "404": {
            "description": "lost item not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "LostItem"
        ],
        "summary": "Updates an existing lost item.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lost item to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The new lost item data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LostItemWriteDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LostItemWriteDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LostItemWriteDTO"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "lost item updated successfully."
          },
          "400": {
            "description": "Invalid input or operation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "LostItem not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LostItem"
        ],
        "summary": "Deletes an existing lost item by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the lost item to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "lost item deleted successfully."
          },
          "400": {
            "description": "Operation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "lost item not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/MatchItem": {
      "get": {
        "tags": [
          "MatchItem"
        ],
        "summary": "Gets all existing match items.",
        "responses": {
          "200": {
            "description": "Returns the list of match items.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MatchItemDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MatchItemDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MatchItemDTO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No match items found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MatchItem"
        ],
        "summary": "Creates a new match item.",
        "requestBody": {
          "description": "The match item data to create (only name is required).",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatchItemWriteDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MatchItemWriteDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MatchItemWriteDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "match item successfully created.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MatchItemDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchItemDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchItemDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or business logic error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/MatchItem/{id}": {
      "get": {
        "tags": [
          "MatchItem"
        ],
        "summary": "Gets a specific match item by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The match item ID.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "match item found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MatchItemDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchItemDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchItemDTO"
                }
              }
            }
          },
          "404": {
            "description": "match item not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MatchItem"
        ],
        "summary": "Updates an existing match item.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the match item to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The new match item data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatchItemWriteDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MatchItemWriteDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MatchItemWriteDTO"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "match item updated successfully."
          },
          "400": {
            "description": "Invalid input or operation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "MatchItem not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MatchItem"
        ],
        "summary": "Deletes an existing match item by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the match item to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "match item deleted successfully."
          },
          "400": {
            "description": "Operation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "match item not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/{id}": {
      "get": {
        "tags": [
          "MatchsStatus"
        ],
        "summary": "Gets a specific match status by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The match status ID.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Match status found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MatchStatusDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchStatusDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchStatusDTO"
                }
              }
            }
          },
          "404": {
            "description": "Match status not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MatchsStatus"
        ],
        "summary": "Updates an existing match status.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the match status to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Match status updated successfully."
          },
          "400": {
            "description": "Invalid input or operation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Match status not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MatchsStatus"
        ],
        "summary": "Deletes an existing match status by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the match status to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Match status deleted successfully."
          },
          "400": {
            "description": "Operation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "MatchStatus not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/Role": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Gets all existing roles.",
        "responses": {
          "200": {
            "description": "Returns the list of roles.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleDTO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No roles found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      },
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Creates a new role.",
        "requestBody": {
          "description": "The role data to create (only name is required).",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleWriteDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleWriteDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleWriteDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Role successfully created.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or business logic error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      }
    },
    "/api/Role/{id}": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Gets a specific role by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The role ID.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDTO"
                }
              }
            }
          },
          "404": {
            "description": "Role not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      },
      "put": {
        "tags": [
          "Role"
        ],
        "summary": "Updates an existing role.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the role to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The new role data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleWriteDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleWriteDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleWriteDTO"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Role updated successfully."
          },
          "400": {
            "description": "Invalid input or operation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Role not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      },
      "delete": {
        "tags": [
          "Role"
        ],
        "summary": "Deletes an existing role by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the role to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Role deleted successfully."
          },
          "400": {
            "description": "Operation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Role not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected server error."
          }
        }
      }
    },
    "/api/User": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets all existing users.",
        "responses": {
          "200": {
            "description": "Returns the list of users.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No users found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Creates a new user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserWriteDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserWriteDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserWriteDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully created.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or business logic error.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets a specific user by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The user ID.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Updates an existing user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The new user data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserWriteDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserWriteDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserWriteDTO"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "User updated successfully."
          },
          "400": {
            "description": "Invalid input or operation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Deletes an existing user by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully."
          },
          "400": {
            "description": "Operation failed.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseDTO"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CategoryDTO": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CategoryWriteDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClaimRequestDTO": {
        "type": "object",
        "properties": {
          "claimRequestId": {
            "type": "integer",
            "format": "int32"
          },
          "foundItemId": {
            "type": "integer",
            "format": "int32"
          },
          "foundItemTitle": {
            "type": "string",
            "nullable": true
          },
          "claimingUserId": {
            "type": "integer",
            "format": "int32"
          },
          "claimingUserFullName": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "claimStatusId": {
            "type": "integer",
            "format": "int32"
          },
          "claimStatusName": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClaimRequestSimpleDTO": {
        "type": "object",
        "properties": {
          "claimRequestId": {
            "type": "integer",
            "format": "int32"
          },
          "claimingUserId": {
            "type": "integer",
            "format": "int32"
          },
          "claimingUserFullName": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "claimStatusId": {
            "type": "integer",
            "format": "int32"
          },
          "claimStatusName": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClaimRequestWriteDTO": {
        "type": "object",
        "properties": {
          "foundItemId": {
            "type": "integer",
            "format": "int32"
          },
          "claimingUserId": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "claimStatusId": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClaimStatusDTO": {
        "type": "object",
        "properties": {
          "claimStatusId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClaimStatusWriteDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ErrorResponseDTO": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FoundItemDTO": {
        "type": "object",
        "properties": {
          "foundItemId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userFullName": {
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "locationName": {
            "type": "string",
            "nullable": true
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "foundDate": {
            "type": "string",
            "format": "date-time"
          },
          "claimRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClaimRequestSimpleDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FoundItemWriteDTO": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "foundDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "LocationDTO": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocationWriteDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LostItemDTO": {
        "type": "object",
        "properties": {
          "lostItemId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userFullName": {
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "locationName": {
            "type": "string",
            "nullable": true
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "lostDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "LostItemWriteDTO": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "lostDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "MatchItemDTO": {
        "type": "object",
        "properties": {
          "matchItemId": {
            "type": "integer",
            "format": "int32"
          },
          "foundItemId": {
            "type": "integer",
            "format": "int32"
          },
          "foundItemTitle": {
            "type": "string",
            "nullable": true
          },
          "lostItemId": {
            "type": "integer",
            "format": "int32"
          },
          "lostItemIdTitle": {
            "type": "string",
            "nullable": true
          },
          "matchUserId": {
            "type": "integer",
            "format": "int32"
          },
          "matchUserName": {
            "type": "string",
            "nullable": true
          },
          "matchStatusId": {
            "type": "integer",
            "format": "int32"
          },
          "matchStatusName": {
            "type": "string",
            "nullable": true
          },
          "observation": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MatchItemWriteDTO": {
        "type": "object",
        "properties": {
          "foundItemId": {
            "type": "integer",
            "format": "int32"
          },
          "lostItemId": {
            "type": "integer",
            "format": "int32"
          },
          "matchUserId": {
            "type": "integer",
            "format": "int32"
          },
          "matchStatusId": {
            "type": "integer",
            "format": "int32"
          },
          "observation": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MatchStatusDTO": {
        "type": "object",
        "properties": {
          "matchStatusId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoleDTO": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoleWriteDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserDTO": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "roleId": {
            "type": "integer",
            "format": "int32"
          },
          "roleName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserWriteDTO": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}